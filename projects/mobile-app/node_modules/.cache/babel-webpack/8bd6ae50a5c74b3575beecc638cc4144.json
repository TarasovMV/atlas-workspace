{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Storage } from '@capacitor/storage';\nimport * as i0 from \"@angular/core\";\nexport let TokenService = /*#__PURE__*/(() => {\n  class TokenService {\n    constructor() {\n      this.token$ = new BehaviorSubject(null);\n      this.tokenUrl = 'user-token';\n      this.tokenSystemUrl = 'system-token';\n    }\n\n    get token() {\n      return this.token$.getValue();\n    }\n\n    saveToken(token) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (!token) {\n          return;\n        }\n\n        yield Storage.set({\n          key: _this.tokenUrl,\n          value: token\n        });\n\n        _this.token$.next(token);\n      })();\n    }\n\n    loadToken() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const res = yield Storage.get({\n          key: _this2.tokenUrl\n        });\n        const token = res.value !== 'null' && res.value !== 'undefined' ? res.value : null;\n\n        _this2.token$.next(token);\n\n        return token;\n      })();\n    }\n\n    deleteToken() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        const res = yield Storage.set({\n          key: _this3.tokenUrl,\n          value: 'null'\n        });\n\n        _this3.token$.next(null);\n      })();\n    }\n\n    loadSystemToken() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        const res = yield Storage.get({\n          key: _this4.tokenSystemUrl\n        });\n        return !!res.value && res.value !== 'null' && res.value !== 'undefined';\n      })();\n    }\n\n    setSystemToken() {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        yield Storage.set({\n          key: _this5.tokenSystemUrl,\n          value: 'set'\n        });\n      })();\n    }\n\n  }\n\n  TokenService.ɵfac = function TokenService_Factory(t) {\n    return new (t || TokenService)();\n  };\n\n  TokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenService,\n    factory: TokenService.ɵfac,\n    providedIn: 'root'\n  });\n  return TokenService;\n})();","map":null,"metadata":{},"sourceType":"module"}