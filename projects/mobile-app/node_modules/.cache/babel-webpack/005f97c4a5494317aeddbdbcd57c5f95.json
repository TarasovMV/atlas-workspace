{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { Storage } from '@capacitor/storage';\nimport * as i0 from \"@angular/core\";\nexport class TokenService {\n  constructor() {\n    this.token$ = new BehaviorSubject(null);\n    this.tokenUrl = 'user-token';\n    this.tokenSystemUrl = 'system-token';\n  }\n\n  get token() {\n    return this.token$.getValue();\n  }\n\n  saveToken(token) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!token) {\n        return;\n      }\n\n      yield Storage.set({\n        key: _this.tokenUrl,\n        value: token\n      });\n\n      _this.token$.next(token);\n    })();\n  }\n\n  loadToken() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield Storage.get({\n        key: _this2.tokenUrl\n      });\n      const token = res.value !== 'null' && res.value !== 'undefined' ? res.value : null;\n\n      _this2.token$.next(token);\n\n      return token;\n    })();\n  }\n\n  deleteToken() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield Storage.set({\n        key: _this3.tokenUrl,\n        value: 'null'\n      });\n\n      _this3.token$.next(null);\n    })();\n  }\n\n  loadSystemToken() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield Storage.get({\n        key: _this4.tokenSystemUrl\n      });\n      return !!res.value && res.value !== 'null' && res.value !== 'undefined';\n    })();\n  }\n\n  setSystemToken() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      yield Storage.set({\n        key: _this5.tokenSystemUrl,\n        value: 'set'\n      });\n    })();\n  }\n\n}\n\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\n\nTokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenService,\n  factory: TokenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/avsv/Documents/GitHub/atlas-workspace/projects/mobile-app/src/app/core/services/data/token.service.ts"],"names":["BehaviorSubject","Storage","i0","TokenService","constructor","token$","tokenUrl","tokenSystemUrl","token","getValue","saveToken","set","key","value","next","loadToken","res","get","deleteToken","loadSystemToken","setSystemToken","ɵfac","TokenService_Factory","t","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,SAASA,eAAT,QAAgC,MAAhC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG;AACV,SAAKC,MAAL,GAAc,IAAIL,eAAJ,CAAoB,IAApB,CAAd;AACA,SAAKM,QAAL,GAAgB,YAAhB;AACA,SAAKC,cAAL,GAAsB,cAAtB;AACH;;AACQ,MAALC,KAAK,GAAG;AACR,WAAO,KAAKH,MAAL,CAAYI,QAAZ,EAAP;AACH;;AACKC,EAAAA,SAAS,CAACF,KAAD,EAAQ;AAAA;;AAAA;AACnB,UAAI,CAACA,KAAL,EAAY;AACR;AACH;;AACD,YAAMP,OAAO,CAACU,GAAR,CAAY;AACdC,QAAAA,GAAG,EAAE,KAAI,CAACN,QADI;AAEdO,QAAAA,KAAK,EAAEL;AAFO,OAAZ,CAAN;;AAIA,MAAA,KAAI,CAACH,MAAL,CAAYS,IAAZ,CAAiBN,KAAjB;AARmB;AAStB;;AACKO,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,YAAMC,GAAG,SAASf,OAAO,CAACgB,GAAR,CAAY;AAAEL,QAAAA,GAAG,EAAE,MAAI,CAACN;AAAZ,OAAZ,CAAlB;AACA,YAAME,KAAK,GAAIQ,GAAG,CAACH,KAAJ,KAAc,MAAd,IAAwBG,GAAG,CAACH,KAAJ,KAAc,WAAvC,GAAsDG,GAAG,CAACH,KAA1D,GAAkE,IAAhF;;AACA,MAAA,MAAI,CAACR,MAAL,CAAYS,IAAZ,CAAiBN,KAAjB;;AACA,aAAOA,KAAP;AAJc;AAKjB;;AACKU,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,YAAMF,GAAG,SAASf,OAAO,CAACU,GAAR,CAAY;AAAEC,QAAAA,GAAG,EAAE,MAAI,CAACN,QAAZ;AAAsBO,QAAAA,KAAK,EAAE;AAA7B,OAAZ,CAAlB;;AACA,MAAA,MAAI,CAACR,MAAL,CAAYS,IAAZ,CAAiB,IAAjB;AAFgB;AAGnB;;AACKK,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,YAAMH,GAAG,SAASf,OAAO,CAACgB,GAAR,CAAY;AAAEL,QAAAA,GAAG,EAAE,MAAI,CAACL;AAAZ,OAAZ,CAAlB;AACA,aAAQ,CAAC,CAACS,GAAG,CAACH,KAAN,IAAeG,GAAG,CAACH,KAAJ,KAAc,MAA7B,IAAuCG,GAAG,CAACH,KAAJ,KAAc,WAA7D;AAFoB;AAGvB;;AACKO,EAAAA,cAAc,GAAG;AAAA;;AAAA;AACnB,YAAMnB,OAAO,CAACU,GAAR,CAAY;AACdC,QAAAA,GAAG,EAAE,MAAI,CAACL,cADI;AAEdM,QAAAA,KAAK,EAAE;AAFO,OAAZ,CAAN;AADmB;AAKtB;;AAtCqB;;AAwC1BV,YAAY,CAACkB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,YAAV,GAAP;AAAmC,CAA1F;;AACAA,YAAY,CAACqB,KAAb,GAAqB,aAActB,EAAE,CAACuB,kBAAH,CAAsB;AAAEjB,EAAAA,KAAK,EAAEL,YAAT;AAAuBuB,EAAAA,OAAO,EAAEvB,YAAY,CAACkB,IAA7C;AAAmDM,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\nimport { Storage } from '@capacitor/storage';\nimport * as i0 from \"@angular/core\";\nexport class TokenService {\n    constructor() {\n        this.token$ = new BehaviorSubject(null);\n        this.tokenUrl = 'user-token';\n        this.tokenSystemUrl = 'system-token';\n    }\n    get token() {\n        return this.token$.getValue();\n    }\n    async saveToken(token) {\n        if (!token) {\n            return;\n        }\n        await Storage.set({\n            key: this.tokenUrl,\n            value: token,\n        });\n        this.token$.next(token);\n    }\n    async loadToken() {\n        const res = await Storage.get({ key: this.tokenUrl });\n        const token = (res.value !== 'null' && res.value !== 'undefined') ? res.value : null;\n        this.token$.next(token);\n        return token;\n    }\n    async deleteToken() {\n        const res = await Storage.set({ key: this.tokenUrl, value: 'null' });\n        this.token$.next(null);\n    }\n    async loadSystemToken() {\n        const res = await Storage.get({ key: this.tokenSystemUrl });\n        return (!!res.value && res.value !== 'null' && res.value !== 'undefined');\n    }\n    async setSystemToken() {\n        await Storage.set({\n            key: this.tokenSystemUrl,\n            value: 'set',\n        });\n    }\n}\nTokenService.ɵfac = function TokenService_Factory(t) { return new (t || TokenService)(); };\nTokenService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TokenService, factory: TokenService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}