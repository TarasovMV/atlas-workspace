{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../platform/app-config.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class ApiUserService {\n  constructor(appConfigService, http) {\n    this.http = http;\n    this.restUrl = appConfigService.getAttribute('restUrl');\n  }\n\n  authorize(code) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const body = {\n        userName: code,\n        password: code\n      };\n      return yield _this.http.post(`${_this.restUrl}/account/login`, body).toPromise();\n    })();\n  }\n\n  fcmTokenRegister(token) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield _this2.http.post(`${_this2.restUrl}/api/User/firebase`, {\n        token\n      }).toPromise();\n    })();\n  }\n\n}\n\nApiUserService.ɵfac = function ApiUserService_Factory(t) {\n  return new (t || ApiUserService)(i0.ɵɵinject(i1.AppConfigService), i0.ɵɵinject(i2.HttpClient));\n};\n\nApiUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiUserService,\n  factory: ApiUserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/avsv/Documents/GitHub/atlas-workspace/projects/mobile-app/src/app/core/services/api/api-user.service.ts"],"names":["i0","i1","i2","ApiUserService","constructor","appConfigService","http","restUrl","getAttribute","authorize","code","body","userName","password","post","toPromise","fcmTokenRegister","token","ɵfac","ApiUserService_Factory","t","ɵɵinject","AppConfigService","HttpClient","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,gBAAD,EAAmBC,IAAnB,EAAyB;AAChC,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeF,gBAAgB,CAACG,YAAjB,CAA8B,SAA9B,CAAf;AACH;;AACKC,EAAAA,SAAS,CAACC,IAAD,EAAO;AAAA;;AAAA;AAClB,YAAMC,IAAI,GAAG;AACTC,QAAAA,QAAQ,EAAEF,IADD;AAETG,QAAAA,QAAQ,EAAEH;AAFD,OAAb;AAIA,mBAAa,KAAI,CAACJ,IAAL,CAAUQ,IAAV,CAAgB,GAAE,KAAI,CAACP,OAAQ,gBAA/B,EAAgDI,IAAhD,EAAsDI,SAAtD,EAAb;AALkB;AAMrB;;AACKC,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AAAA;;AAAA;AAC1B,mBAAa,MAAI,CAACX,IAAL,CAAUQ,IAAV,CAAgB,GAAE,MAAI,CAACP,OAAQ,oBAA/B,EAAoD;AAAEU,QAAAA;AAAF,OAApD,EAA+DF,SAA/D,EAAb;AAD0B;AAE7B;;AAduB;;AAgB5BZ,cAAc,CAACe,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,cAAV,EAA0BH,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,gBAAf,CAA1B,EAA4DtB,EAAE,CAACqB,QAAH,CAAYnB,EAAE,CAACqB,UAAf,CAA5D,CAAP;AAAiG,CAA5J;;AACApB,cAAc,CAACqB,KAAf,GAAuB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAER,EAAAA,KAAK,EAAEd,cAAT;AAAyBuB,EAAAA,OAAO,EAAEvB,cAAc,CAACe,IAAjD;AAAuDS,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../platform/app-config.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class ApiUserService {\n    constructor(appConfigService, http) {\n        this.http = http;\n        this.restUrl = appConfigService.getAttribute('restUrl');\n    }\n    async authorize(code) {\n        const body = {\n            userName: code,\n            password: code,\n        };\n        return await this.http.post(`${this.restUrl}/account/login`, body).toPromise();\n    }\n    async fcmTokenRegister(token) {\n        return await this.http.post(`${this.restUrl}/api/User/firebase`, { token }).toPromise();\n    }\n}\nApiUserService.ɵfac = function ApiUserService_Factory(t) { return new (t || ApiUserService)(i0.ɵɵinject(i1.AppConfigService), i0.ɵɵinject(i2.HttpClient)); };\nApiUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ApiUserService, factory: ApiUserService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}