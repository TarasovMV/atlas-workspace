{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/api-user.service\";\nimport * as i2 from \"./token.service\";\nimport * as i3 from \"@ionic/angular\";\nexport class UserService {\n  constructor(apiUserService, tokenService, navCtrl) {\n    this.apiUserService = apiUserService;\n    this.tokenService = tokenService;\n    this.navCtrl = navCtrl;\n  }\n\n  authorize() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const token = yield _this.tokenService.loadToken();\n      return !!token;\n    })();\n  }\n\n  login(code) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const user = yield _this2.apiUserService.authorize(code);\n      yield _this2.tokenService.saveToken(user.token);\n      yield _this2.navCtrl.navigateRoot('start');\n    })();\n  }\n\n  logout() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.tokenService.deleteToken();\n      yield _this3.navCtrl.navigateRoot('auth');\n    })();\n  }\n\n}\n\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.ApiUserService), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.NavController));\n};\n\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/avsv/Documents/GitHub/atlas-workspace/projects/mobile-app/src/app/core/services/data/user.service.ts"],"names":["i0","i1","i2","i3","UserService","constructor","apiUserService","tokenService","navCtrl","authorize","token","loadToken","login","code","user","saveToken","navigateRoot","logout","deleteToken","ɵfac","UserService_Factory","t","ɵɵinject","ApiUserService","TokenService","NavController","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAwC;AAC/C,SAAKF,cAAL,GAAsBA,cAAtB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACKC,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,YAAMC,KAAK,SAAS,KAAI,CAACH,YAAL,CAAkBI,SAAlB,EAApB;AACA,aAAO,CAAC,CAACD,KAAT;AAFc;AAGjB;;AACKE,EAAAA,KAAK,CAACC,IAAD,EAAO;AAAA;;AAAA;AACd,YAAMC,IAAI,SAAS,MAAI,CAACR,cAAL,CAAoBG,SAApB,CAA8BI,IAA9B,CAAnB;AACA,YAAM,MAAI,CAACN,YAAL,CAAkBQ,SAAlB,CAA4BD,IAAI,CAACJ,KAAjC,CAAN;AACA,YAAM,MAAI,CAACF,OAAL,CAAaQ,YAAb,CAA0B,OAA1B,CAAN;AAHc;AAIjB;;AACKC,EAAAA,MAAM,GAAG;AAAA;;AAAA;AACX,YAAM,MAAI,CAACV,YAAL,CAAkBW,WAAlB,EAAN;AACA,YAAM,MAAI,CAACV,OAAL,CAAaQ,YAAb,CAA0B,MAA1B,CAAN;AAFW;AAGd;;AAlBoB;;AAoBzBZ,WAAW,CAACe,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIjB,WAAV,EAAuBJ,EAAE,CAACsB,QAAH,CAAYrB,EAAE,CAACsB,cAAf,CAAvB,EAAuDvB,EAAE,CAACsB,QAAH,CAAYpB,EAAE,CAACsB,YAAf,CAAvD,EAAqFxB,EAAE,CAACsB,QAAH,CAAYnB,EAAE,CAACsB,aAAf,CAArF,CAAP;AAA6H,CAAlL;;AACArB,WAAW,CAACsB,KAAZ,GAAoB,aAAc1B,EAAE,CAAC2B,kBAAH,CAAsB;AAAEjB,EAAAA,KAAK,EAAEN,WAAT;AAAsBwB,EAAAA,OAAO,EAAExB,WAAW,CAACe,IAA3C;AAAiDU,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api/api-user.service\";\nimport * as i2 from \"./token.service\";\nimport * as i3 from \"@ionic/angular\";\nexport class UserService {\n    constructor(apiUserService, tokenService, navCtrl) {\n        this.apiUserService = apiUserService;\n        this.tokenService = tokenService;\n        this.navCtrl = navCtrl;\n    }\n    async authorize() {\n        const token = await this.tokenService.loadToken();\n        return !!token;\n    }\n    async login(code) {\n        const user = await this.apiUserService.authorize(code);\n        await this.tokenService.saveToken(user.token);\n        await this.navCtrl.navigateRoot('start');\n    }\n    async logout() {\n        await this.tokenService.deleteToken();\n        await this.navCtrl.navigateRoot('auth');\n    }\n}\nUserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(i0.ɵɵinject(i1.ApiUserService), i0.ɵɵinject(i2.TokenService), i0.ɵɵinject(i3.NavController)); };\nUserService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}