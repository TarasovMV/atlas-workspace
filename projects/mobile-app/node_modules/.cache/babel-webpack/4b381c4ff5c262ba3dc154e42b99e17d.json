{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BehaviorSubject } from 'rxjs';\nimport { Keyboard, KeyboardStyle, KeyboardResize } from '@capacitor/keyboard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let KeyboardService = /*#__PURE__*/(() => {\n  class KeyboardService {\n    constructor(router) {\n      this.router = router;\n      this.keyboardHeight$ = new BehaviorSubject(0);\n      this.routesWithCoveredKeyboard = ['/auth'];\n    }\n\n    setInitSettings(platform, appWindow) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (!appWindow) {\n          return;\n        }\n\n        try {\n          _this.actionListeners(platform, appWindow);\n\n          yield Keyboard.setStyle({\n            style: KeyboardStyle.Light\n          });\n          yield Keyboard.setResizeMode({\n            mode: KeyboardResize.None\n          });\n        } catch (_a) {}\n      })();\n    }\n\n    actionListeners(platform, appWindow) {\n      Keyboard.addListener('keyboardWillShow', event => this.keyboardHeight$.next(event.keyboardHeight));\n      Keyboard.addListener('keyboardWillHide', () => this.keyboardHeight$.next(0));\n      this.keyboardHeight$.subscribe(height => {\n        appWindow.el.style = `height: calc(100vh - ${height}px)`;\n\n        if (!this.routesWithCoveredKeyboard.includes(this.router.url)) {\n          setTimeout(() => {\n            var _a;\n\n            return (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n              behavior: 'smooth'\n            });\n          }, 300);\n        }\n      });\n    }\n\n  }\n\n  KeyboardService.ɵfac = function KeyboardService_Factory(t) {\n    return new (t || KeyboardService)(i0.ɵɵinject(i1.Router));\n  };\n\n  KeyboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: KeyboardService,\n    factory: KeyboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return KeyboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}