{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AppConfigService = /*#__PURE__*/(() => {\n  class AppConfigService {\n    constructor(http) {\n      this.http = http;\n      this.appConfig = undefined;\n    }\n\n    loadAppConfig() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.appConfig = yield _this.http.get('assets/config.json').toPromise();\n      })();\n    }\n\n    getAttribute(key) {\n      var _a;\n\n      if (!this.appConfig) {\n        console.error('Config file not found');\n      }\n\n      return (_a = this.appConfig) === null || _a === void 0 ? void 0 : _a[key];\n    }\n\n  }\n\n  AppConfigService.ɵfac = function AppConfigService_Factory(t) {\n    return new (t || AppConfigService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AppConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppConfigService,\n    factory: AppConfigService.ɵfac,\n    providedIn: 'root'\n  });\n  return AppConfigService;\n})();\nexport const appConfigInit = appConfigService => /*#__PURE__*/_asyncToGenerator(function* () {\n  return yield appConfigService.loadAppConfig();\n});","map":null,"metadata":{},"sourceType":"module"}