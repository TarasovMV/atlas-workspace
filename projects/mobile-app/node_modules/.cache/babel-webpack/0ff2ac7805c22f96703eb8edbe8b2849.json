{"ast":null,"code":"import _asyncToGenerator from \"/Users/avsv/Documents/GitHub/atlas-workspace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { NavigationStart } from \"@angular/router\";\nimport { filter } from \"rxjs/operators\";\nimport { App } from '@capacitor/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport class BackButtonService {\n  constructor(navCtrl, platform, router, toastController) {\n    this.navCtrl = navCtrl;\n    this.platform = platform;\n    this.router = router;\n    this.toastController = toastController;\n    this.backCounter = 0;\n    this.routeCounter = 0;\n    this.rootPages = ['tabs-notifications', 'tabs-offline', 'tabs-progress', 'tabs-about', 'tabs-tests', 'tabs'];\n    this.router.events.pipe(filter(event => event instanceof NavigationStart)).subscribe(x => {\n      if (!this.routeCounter) {\n        this.routeCounter++;\n        return;\n      }\n\n      if (this.isRootPage(x.url)) {\n        this.disableBackOnRoot(this.platform);\n      } else {\n        this.clearOnRoot();\n        this.default(this.platform);\n      }\n    });\n  }\n\n  init(platform) {\n    this.disableBackOnRoot(platform);\n  }\n\n  default(platform) {\n    platform.backButton.subscribeWithPriority(9999, () => {\n      this.navCtrl.back();\n    });\n  }\n\n  actionOnBack(platform, action, isBack = true) {\n    this.rootSubscription = platform.backButton.subscribeWithPriority(9999, () => {\n      action();\n\n      if (isBack) {\n        this.navCtrl.back();\n      }\n    });\n  }\n\n  disableBackOnRoot(platform) {\n    this.rootSubscription = platform.backButton.subscribeWithPriority(9999, () => {\n      this.backCounter++;\n\n      if (this.backCounter === 2) {\n        App.exitApp();\n      } else {\n        this.showBackElseMessage().then();\n        setTimeout(() => this.backCounter = 0, 1500);\n      }\n    });\n  }\n\n  clearOnRoot() {\n    var _a;\n\n    if (!this.rootSubscription) {\n      return;\n    }\n\n    (_a = this.rootSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this.rootSubscription = null;\n  }\n\n  clearAction() {\n    var _a;\n\n    if (!this.actionSubscription) {\n      return;\n    }\n\n    (_a = this.actionSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this.actionSubscription = null;\n  }\n\n  showBackElseMessage() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const toast = yield _this.toastController.create({\n        message: 'Для выхода из приложения нажмите \"Назад\" еще раз',\n        duration: 1500,\n        cssClass: 'custom-toast'\n      });\n      yield toast.present();\n    })();\n  }\n\n  isRootPage(path) {\n    const checkPath = path.split('/').slice(-1)[0];\n\n    for (let page of this.rootPages) {\n      if (checkPath === page) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nBackButtonService.ɵfac = function BackButtonService_Factory(t) {\n  return new (t || BackButtonService)(i0.ɵɵinject(i1.NavController), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1.ToastController));\n};\n\nBackButtonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BackButtonService,\n  factory: BackButtonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/avsv/Documents/GitHub/atlas-workspace/projects/mobile-app/src/app/core/services/platform/back-button.service.ts"],"names":["NavigationStart","filter","App","i0","i1","i2","BackButtonService","constructor","navCtrl","platform","router","toastController","backCounter","routeCounter","rootPages","events","pipe","event","subscribe","x","isRootPage","url","disableBackOnRoot","clearOnRoot","default","init","backButton","subscribeWithPriority","back","actionOnBack","action","isBack","rootSubscription","exitApp","showBackElseMessage","then","setTimeout","_a","unsubscribe","clearAction","actionSubscription","toast","create","message","duration","cssClass","present","path","checkPath","split","slice","page","ɵfac","BackButtonService_Factory","t","ɵɵinject","NavController","Platform","Router","ToastController","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { NavigationStart } from \"@angular/router\";\nimport { filter } from \"rxjs/operators\";\nimport { App } from '@capacitor/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport class BackButtonService {\n    constructor(navCtrl, platform, router, toastController) {\n        this.navCtrl = navCtrl;\n        this.platform = platform;\n        this.router = router;\n        this.toastController = toastController;\n        this.backCounter = 0;\n        this.routeCounter = 0;\n        this.rootPages = [\n            'tabs-notifications',\n            'tabs-offline',\n            'tabs-progress',\n            'tabs-about',\n            'tabs-tests',\n            'tabs',\n        ];\n        this.router.events\n            .pipe(filter(event => event instanceof NavigationStart))\n            .subscribe((x) => {\n            if (!this.routeCounter) {\n                this.routeCounter++;\n                return;\n            }\n            if (this.isRootPage(x.url)) {\n                this.disableBackOnRoot(this.platform);\n            }\n            else {\n                this.clearOnRoot();\n                this.default(this.platform);\n            }\n        });\n    }\n    init(platform) {\n        this.disableBackOnRoot(platform);\n    }\n    default(platform) {\n        platform.backButton.subscribeWithPriority(9999, () => {\n            this.navCtrl.back();\n        });\n    }\n    actionOnBack(platform, action, isBack = true) {\n        this.rootSubscription = platform.backButton.subscribeWithPriority(9999, () => {\n            action();\n            if (isBack) {\n                this.navCtrl.back();\n            }\n        });\n    }\n    disableBackOnRoot(platform) {\n        this.rootSubscription = platform.backButton.subscribeWithPriority(9999, () => {\n            this.backCounter++;\n            if (this.backCounter === 2) {\n                App.exitApp();\n            }\n            else {\n                this.showBackElseMessage().then();\n                setTimeout(() => this.backCounter = 0, 1500);\n            }\n        });\n    }\n    clearOnRoot() {\n        var _a;\n        if (!this.rootSubscription) {\n            return;\n        }\n        (_a = this.rootSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.rootSubscription = null;\n    }\n    clearAction() {\n        var _a;\n        if (!this.actionSubscription) {\n            return;\n        }\n        (_a = this.actionSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.actionSubscription = null;\n    }\n    async showBackElseMessage() {\n        const toast = await this.toastController.create({\n            message: 'Для выхода из приложения нажмите \"Назад\" еще раз',\n            duration: 1500,\n            cssClass: 'custom-toast',\n        });\n        await toast.present();\n    }\n    isRootPage(path) {\n        const checkPath = path.split('/').slice(-1)[0];\n        for (let page of this.rootPages) {\n            if (checkPath === page) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nBackButtonService.ɵfac = function BackButtonService_Factory(t) { return new (t || BackButtonService)(i0.ɵɵinject(i1.NavController), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i1.ToastController)); };\nBackButtonService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: BackButtonService, factory: BackButtonService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}